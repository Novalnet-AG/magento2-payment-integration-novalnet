<?php
/**
 * Novalnet payment extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Novalnet End User License Agreement
 * that is bundled with this package in the file LICENSE.txt
 *
 * DISCLAIMER
 *
 * If you wish to customize Novalnet payment extension for your needs,
 * please contact technic@novalnet.de for more information.
 *
 * @category   Novalnet
 * @package    Novalnet_Payment
 * @copyright  Copyright (c) Novalnet AG
 * @license    https://www.novalnet.de/payment-plugins/kostenlos/lizenz
 */

/**
 * @var $block \Novalnet\Payments\Block\Info\Pay
 */
$info = $block->getInfo();
$order = $info->getOrder();
$transactionId = $block->getAdditionalData('NnTid') ? $block->getAdditionalData('NnTid') : $info->getLastTransId();
$paymentStatus = $block->novalnetHelper()->getStatus($block->getAdditionalData('NnStatus'), $order, $block->getAdditionalData('NnPaymentType'));
$totalAmount = ($block->getAdditionalData('NnAmount')) ? $block->getAdditionalData('NnAmount') : $block->getGrandTotal();
?>

<?php if ($info): ?>
    <?php if ($block->getAdditionalData('NnTestMode')): ?>
        <div style="color:white;font-weight:bold;background:red;padding:5px 10px;text-align:center;font-size:15px">
            <?= /* @noEscape */ __('Test order') ?>
        </div>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Payment method title -->
    <?= $block->escapeHtml($block->getAdditionalData('NnPaymentTitle')) ?><br>
{{pdf_row_separator}}
    <!-- Transaction ID -->
    <?php if ($transactionId): ?>
        <?= /* @noEscape */ __('Novalnet Transaction ID: '). $transactionId ?><br><br>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Multibanco payment reference -->
    <?php if ($block->getAdditionalData('NnPartnerPaymentReference') && (empty($block->getAdditionalData('NnPaid')) || $block->getAdditionalData('NnPaid') != 1)): ?>
        <?= /* @noEscape */ __('Please use the following payment reference details to pay the amount of %1 at a Multibanco ATM or through your internet banking.', $block->getGrandTotal()) ?><br><br>
        <?= /* @noEscape */ __('Partner Payment Reference: %1', $block->getAdditionalData('NnPartnerPaymentReference')) ?><br>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Gurantee pending comments  -->
    <?php if ($block->getAdditionalData('NnGuarantee') || in_array($block->getAdditionalData('NnPaymentType'), ['GUARANTEED_INVOICE', 'INSTALMENT_INVOICE', 'GUARANTEED_DIRECT_DEBIT_SEPA', 'INSTALMENT_DIRECT_DEBIT_SEPA'])): ?>
        <?php if ($block->getAdditionalData('NnGuarantee')): ?>
            <?= /* @noEscape */ __('This is processed as a guarantee payment') . '<br /><br />'; ?>
        <?php endif; ?>
        <?php if ($paymentStatus == 'PENDING'): ?>
            <?= /* @noEscape */ __('Your order is being verified. Once confirmed, we will send you our bank details to which the order amount should be transferred. Please note that this may take up to 24 hours') ?><br><br>
        <?php endif; ?>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- capture/void comments  -->
    <?php if ($block->getAdditionalData('ApiProcess') == 'capture'): ?>
        <?= /* @noEscape */ __(
            'The transaction has been confirmed on %1',
            $block->getAdditionalData('ApiProcessedAt')
        ) ?><br><br>
    <?php elseif ($block->getAdditionalData('ApiProcess') == 'void'): ?>
        <?= /* @noEscape */ __(
            'The transaction has been canceled on %1',
            $block->getAdditionalData('ApiProcessedAt')
        ) ?><br><br>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- cashpayment due date -->
    <?php if ($block->getAdditionalData('CpDueDate') && (empty($block->getAdditionalData('NnPaid')) || $block->getAdditionalData('NnPaid') != 1)): ?>
        <?= /* @noEscape */ __('Slip expiry date: %1', $block->getAdditionalData('CpDueDate')) ?><br><br>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Transaction Update -->
    <?php if ($block->getAdditionalData('dueDateUpdateAt') && $paymentStatus != 'ON_HOLD' && in_array($block->getAdditionalData('NnPaymentType'), ['INVOICE', 'PREPAYMENT', 'CASHPAYMENT'])): ?>
        <?= /* @noEscape */ __(
            'The transaction has been updated with amount %1 and due date with %2',
            $totalAmount,
            $block->getAdditionalData('NnDueDate')
        ) ?><br><br>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- cashpayment store details -->
    <?php if (!empty($block->getUrl('*/*/*', ['_current' => true])) && !preg_match('/invoice|creditmemo|shipment|callback/i', $block->getUrl('*/*/*', ['_current' => true])) &&
        (empty($block->getAdditionalData('NnPaid')) || $block->getAdditionalData('NnPaid') != 1)): ?>
        <?php if ($block->getAdditionalData('CashpaymentStores')): ?>
            <?= /* @noEscape */ __('Store(s) near you:') ?><br><br>
            <?php foreach ($block->getAdditionalData('CashpaymentStores') as $key => $value): ?>
                <?= /* @noEscape */ $value['title'] ?><br>
                <?= /* @noEscape */ $value['street'] ?><br>
                <?= /* @noEscape */ $value['city'] ?><br>
                <?= /* @noEscape */ $value['country'] ?><br>
                <?= /* @noEscape */ $value['zipcode'] ?><br><br>
            <?php endforeach; ?>
        <?php endif; ?>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- zero amount booking -->
    <?php if ($block->getAdditionalData('NnZeroAmountBooking')): ?>
        <?= /* @noEscape */ __('This order processed as a zero amount booking') ?>
        <br><br>
        <?php if ($block->getAdditionalData('NnUpdatedZeroAmount') && $block->getAdditionalData('NnZeroAmountRefTid')): ?>
            <?= /* @noEscape */ __(
                'Your order has been booked with the amount of %1. Your new TID for the booked amount: %2',
                $block->getAdditionalData('NnUpdatedZeroAmount'),
                $block->getAdditionalData('NnZeroAmountRefTid')
            ) ?><br>
        <?php endif; ?>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Refund Comments -->
    <?php if ($block->getAdditionalData('NnRefunded')): ?>
        <?php foreach ($block->getAdditionalData('NnRefunded') as $key => $value): ?>
            <?php if ($value['reftid'] && preg_match("/-refund/i", $value['reftid'])): ?>
                <?= /* @noEscape */ __(
                    'Refund has been initiated for the TID:%1 with the amount %2',
                    $block->novalnetHelper()->makeValidNumber($value['reqtid']),
                    $value['refamount']
                ) ?><br>
            <?php else: ?>
                <?= /* @noEscape */ __(
                    'Refund has been initiated for the TID: %1 with the amount %2. New TID:%3',
                    $block->novalnetHelper()->makeValidNumber($value['reqtid']),
                    $value['refamount'],
                    $block->novalnetHelper()->makeValidNumber($value['reftid'])
                ) ?><br>
            <?php endif; ?>
        <?php endforeach; ?>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Invoice Comments (bank details) -->
    <?php if ($block->getAdditionalData('NnPaymentType') == 'INVOICE'): ?>
        <?php if (!empty($block->getUrl('*/*/*', ['_current' => true])) && !preg_match('/creditmemo/i', $block->getUrl('*/*/*', ['_current' => true])) &&
            in_array($paymentStatus, ['PENDING', 'ON_HOLD', 'CONFIRMED']) && (empty($block->getAdditionalData('NnPaid')) || $block->getAdditionalData('NnPaid') != 1) &&
            (empty($block->getAdditionalData('NnGuarantee')) || (!empty($block->getAdditionalData('NnGuarantee')) && $paymentStatus != 'PENDING'))): ?>
            <?php if (!empty($block->getAdditionalData('NnInvoiceComments')) && strlen($block->getAdditionalData('NnInvoiceComments'))): ?>
                <?php if ($paymentStatus != 'ON_HOLD'): ?>
                    <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account on or before %2', $totalAmount, $block->getAdditionalData('NnDueDate')) ?>
                <?php else: ?>
                    <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account', $totalAmount) ?>
                <?php endif; ?>
                <?php $invoiceComments = (!empty($block->getAdditionalData('NnInvoiceComments'))) ? explode('|', $block->getAdditionalData('NnInvoiceComments')) : []; ?>
                <?php foreach ($invoiceComments as $noteValue): ?>
                    <?php list($text, $value) = (!empty($noteValue)) ? explode(':', $noteValue) : ['', '']; ?>
                    <?php if (!empty($value) && preg_match('/Order No&/i', $value)): ?>
                        <?php list($referenceTxt, $value) = (!empty($value)) ? explode('&', $value) : ['', '']; ?>
                        <?php str_replace('&', '', $referenceTxt); ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . __($referenceTxt) . ' ' . $value ?>
                    <?php elseif ($text != 'Due Date' || ($text == 'Due Date' && $paymentStatus != 'ON_HOLD')): ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . $value ?>
                    <?php endif; ?>
                <?php endforeach; ?><br>
            <?php endif; ?>
        <?php endif; ?>
    <?php endif; ?>
    <?php if ($block->getAdditionalData('NnPaymentType') == 'GUARANTEED_INVOICE'): ?>
        <?php if (!empty($block->getUrl('*/*/*', ['_current' => true])) && !preg_match('/creditmemo/i', $block->getUrl('*/*/*', ['_current' => true])) && in_array($paymentStatus, ['ON_HOLD', 'CONFIRMED'])): ?>
            <?php if (!empty($block->getAdditionalData('NnInvoiceComments')) && strlen($block->getAdditionalData('NnInvoiceComments'))): ?>
                <?php if ($paymentStatus != 'ON_HOLD'): ?>
                    <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account on or before %2', $totalAmount, $block->getAdditionalData('NnDueDate')) ?>
                <?php else: ?>
                    <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account', $totalAmount) ?>
                <?php endif; ?>
                <?php $invoiceComments = (!empty($block->getAdditionalData('NnInvoiceComments'))) ? explode('|', $block->getAdditionalData('NnInvoiceComments')) : []; ?>
                <?php foreach ($invoiceComments as $noteValue): ?>
                    <?php list($text, $value) = (!empty($noteValue)) ? explode(':', $noteValue) : ['', '']; ?>
                    <?php if (!empty($value) && preg_match('/Order No&/i', $value)): ?>
                        <?php list($referenceTxt, $value) = (!empty($value)) ? explode('&', $value) : ['', '']; ?>
                        <?php str_replace('&', '', $referenceTxt); ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . __($referenceTxt) . ' ' . $value ?>
                    <?php elseif ($text != 'Due Date' || ($text == 'Due Date' && $paymentStatus != 'ON_HOLD')): ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . $value ?>
                    <?php endif; ?>
                <?php endforeach; ?><br>
            <?php endif; ?>
        <?php endif; ?>
    <?php endif; ?>
    <?php if ($block->getAdditionalData('NnPaymentType') == 'INSTALMENT_INVOICE'): ?>
        <?php if (!empty($block->getUrl('*/*/*', ['_current' => true])) && !preg_match('/creditmemo/i', $block->getUrl('*/*/*', ['_current' => true])) && in_array($paymentStatus, ['ON_HOLD', 'CONFIRMED']) && empty($block->getAdditionalData('prepaid'))): ?>
            <?php if (!empty($block->getAdditionalData('NnInvoiceComments')) && strlen($block->getAdditionalData('NnInvoiceComments'))): ?>
                <?php if ($paymentStatus != 'ON_HOLD'): ?>
                    <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account on or before %2', $totalAmount, $block->getAdditionalData('NnDueDate')) ?>
                <?php else: ?>
                    <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account', $totalAmount) ?>
                <?php endif; ?>
                <?php $invoiceComments = (!empty($block->getAdditionalData('NnInvoiceComments'))) ? explode('|', $block->getAdditionalData('NnInvoiceComments')) : []; ?>
                <?php $notesCount = count($invoiceComments); ?>
                <?php foreach ($invoiceComments as $key => $noteValue): ?>
                    <?php list($text, $value) = (!empty($noteValue)) ? explode(':', $noteValue) : ['', '']; ?>
                    <?php if ($text == 'Payment Reference' && $notesCount == 8 && $key == 6): ?>
                        <?php continue; ?>
                    <?php endif; ?>
                    <?php if (!empty($value) && preg_match('/Order No&/i', $value)): ?>
                        <?php list($referenceTxt, $value) = (!empty($value)) ? explode('&', $value) : ['', '']; ?>
                        <?php str_replace('&', '', $referenceTxt); ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . __($referenceTxt) . ' ' . $value ?>
                    <?php elseif ($text != 'Due Date' || ($text == 'Due Date' && $paymentStatus != 'ON_HOLD')): ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . $value ?>
                    <?php endif; ?>
                <?php endforeach; ?><br>
            <?php endif; ?>
        <?php endif; ?>
    <?php endif; ?>
    <!-- Invoice Comments (bank details) -->
{{pdf_row_separator}}
    <?php if ($block->getAdditionalData('NnPaymentType') == 'PREPAYMENT'): ?>
        <?php if (!empty($block->getUrl('*/*/*', ['_current' => true])) && !preg_match('/invoice|creditmemo|shipment|callback/i', $block->getUrl('*/*/*', ['_current' => true])) &&
            (empty($block->getAdditionalData('NnPaid')) || $block->getAdditionalData('NnPaid') != 1)): ?>
            <?php if (!empty($block->getAdditionalData('NnInvoiceComments')) && strlen($block->getAdditionalData('NnInvoiceComments'))): ?>
                <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account on or before %2', $totalAmount, $block->getAdditionalData('NnDueDate')) ?>
                <?php $invoiceComments = (!empty($block->getAdditionalData('NnInvoiceComments'))) ? explode('|', $block->getAdditionalData('NnInvoiceComments')) : []; ?>
                <?php foreach ($invoiceComments as $noteValue): ?>
                    <?php list($text, $value) =  (!empty($noteValue)) ? explode(':', $noteValue) : ['', '']; ?>
                    <?php if (!empty($value) && preg_match('/Order No&/i', $value)): ?>
                        <?php list($referenceTxt, $value) = (!empty($value)) ? explode('&', $value) : ['', '']; ?>
                        <?php str_replace('&', '', $referenceTxt); ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . __($referenceTxt) . ' ' . $value ?>
                    <?php else: ?>
                        <br><?= /* @noEscape */ __($text) . ': ' . $value ?>
                    <?php endif; ?>
                <?php endforeach; ?><br>
            <?php endif; ?>
        <?php endif; ?>
    <?php endif; ?>
{{pdf_row_separator}}
    <?php if ($block->getAdditionalData('InstalmentCancel')): ?>
        <br>
        <?= /* @noEscape */ __(
            'Instalment has been cancelled.'
        ) ?><br>
    <?php endif; ?>
{{pdf_row_separator}}
    <!-- Additional Callback comments -->
    <?php if ($block->getAdditionalData('NnComments')): ?>
        <?= /* @noEscape */ $block->getAdditionalData('NnComments') ?>
    <?php endif; ?>
{{pdf_row_separator}}
<?php else: ?>
    <?= /* @noEscape */ __('Error in getting payment method') ?>
<?php endif; ?>
