<?php
/**
 * Novalnet payment extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Novalnet End User License Agreement
 * that is bundled with this package in the file LICENSE.txt
 *
 * DISCLAIMER
 *
 * If you wish to customize Novalnet payment extension for your needs,
 * please contact technic@novalnet.de for more information.
 *
 * @category   Novalnet
 * @package    Novalnet_Payment
 * @copyright  Copyright (c) Novalnet AG
 * @license    https://www.novalnet.de/payment-plugins/kostenlos/lizenz
 */

/**
 * @var $block \Novalnet\Payments\Block\Info\InvoiceGuarantee
 */
$info = $block->getInfo();
$order = $info->getOrder();
$transactionId = $block->getAdditionalData('NnTid') ? $block->getAdditionalData('NnTid') : $info->getLastTransId();
$paymentStatus = $block->novalnetHelper()->getStatus($block->getAdditionalData('NnStatus'), $order);
$totalAmount = ($block->getAdditionalData('NnAmount')) ? $block->getAdditionalData('NnAmount') : $block->getGrandTotal();
?>
<?php if ($info): ?>
    <?php if ($block->getAdditionalData('NnTestMode')): ?>
        <div style="color:white;font-weight:bold;background:red;padding:5px 10px;text-align:center;font-size:15px">
            <?= /* @noEscape */ __('Test order') ?>
        </div>
    <?php endif; ?>
    <?= $block->escapeHtml($block->getMethod()->getTitle()) ?><br>

    <?php if ($transactionId): ?>
        <?= /* @noEscape */ __('Novalnet Transaction ID: '). $transactionId ?><br><br>
    <?php endif; ?>

    <?php if ($paymentStatus == 'PENDING'): ?>
        <?= /* @noEscape */ __('Your order is being verified. Once confirmed, we will send you our bank details to which the order amount should be transferred. Please note that this may take up to 24 hours') ?><br><br>
    <?php endif; ?>


    <?php if ($block->getAdditionalData('ApiProcess') == 'capture'): ?>
        <?= /* @noEscape */ __(
            'The transaction has been confirmed successfully for the TID: %1',
            $transactionId
        ) ?><br><br>
    <?php endif; ?>

    <?php if ($block->getAdditionalData('ApiProcess') == 'void'): ?>
        <?= /* @noEscape */ __(
            'The transaction has been canceled on %1',
            $block->getAdditionalData('ApiProcessedAt')
        ) ?><br><br>
    <?php endif; ?>

    <?php if ($block->getAdditionalData('NnRefunded')): ?>
        <?php foreach ($block->getAdditionalData('NnRefunded') as $key => $value): ?>
            <?php if (!empty($value['reftid']) && preg_match("/-refund/i", $value['reftid'])): ?>
                <?= /* @noEscape */ __(
                    'Refund has been initiated for the TID:%1 with the amount %2',
                    $block->novalnetHelper()->makeValidNumber($value['reqtid']),
                    $value['refamount']
                ) ?><br>
            <?php else: ?>
                <?= /* @noEscape */ __(
                    'Refund has been initiated for the TID: %1 with the amount %2. New TID:%3',
                    $block->novalnetHelper()->makeValidNumber($value['reqtid']),
                    $value['refamount'],
                    $block->novalnetHelper()->makeValidNumber($value['reftid'])
                ) ?><br>
            <?php endif; ?>
        <?php endforeach; ?>
    <?php endif; ?>

    <?php if (!empty($block->getUrl('*/*/*', ['_current' => true])) && !preg_match('/creditmemo/i', $block->getUrl('*/*/*', ['_current' => true])) && in_array($paymentStatus, ['ON_HOLD', 'CONFIRMED'])): ?>
        <?php if (!empty($block->getAdditionalData('NnInvoiceComments')) && strlen($block->getAdditionalData('NnInvoiceComments'))): ?>
            <?php if ($paymentStatus != 'ON_HOLD'): ?>
                <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account on or before %2', $totalAmount, $block->getAdditionalData('NnDueDate')) ?>
            <?php else: ?>
                <br><?= /* @noEscape */ __('Please transfer the amount of %1 to the following account', $totalAmount) ?>
            <?php endif; ?>
            <?php $invoiceComments = (!empty($block->getAdditionalData('NnInvoiceComments'))) ? explode('|', $block->getAdditionalData('NnInvoiceComments')) : []; ?>
            <?php foreach ($invoiceComments as $noteValue): ?>
                <?php list($text, $value) = (!empty($noteValue)) ? explode(':', $noteValue) : ['', '']; ?>
                <?php if (!empty($value) && preg_match('/Order No&/i', $value)): ?>
                    <?php list($referenceTxt, $value) = (!empty($value)) ? explode('&', $value) : ['', '']; ?>
                    <?php str_replace('&', '', $referenceTxt); ?>
                    <br><?= /* @noEscape */ __($text) . ': ' . __($referenceTxt) . ' ' . $value ?>
                <?php elseif ($text != 'Due Date' || ($text == 'Due Date' && $paymentStatus != 'ON_HOLD')): ?>
                    <br><?= /* @noEscape */ __($text) . ': ' . $value ?>
                <?php endif; ?>
            <?php endforeach; ?><br>
        <?php endif; ?>
    <?php endif; ?>

    <?php if ($block->getAdditionalData('NnComments')): ?>
        <?= /* @noEscape */ $block->getAdditionalData('NnComments') ?>
    <?php endif; ?>
<?php else: ?>
    <?= /* @noEscape */ __('Error in getting payment method') ?>
<?php endif; ?>
